{
    "port": 9001,

    "server_name": "potato annotator",

    "annotation_task_name": "Affirmative Action Essays",

    # Potato will write the annotation file for all annotations to this
    # directory, as well as per-annotator output files and state information
    # necessary to restart annotation.
    "output_annotation_dir": "annotation_output/",

    # The output format for the all-annotator data. Allowed formats are:
    # * jsonl
    # * json (same output as jsonl)
    # * csv
    # * tsv
    #
    "output_annotation_format": "tsv", 

    # If annotators are using a codebook, this will be linked at the top to the
    # instance for easy access
    "annotation_codebook_url": "",

    "data_files": [
       "data_files/aa_opeds_sample_20.json"
    ],

    "item_properties": {
        "id_key": "id",
        "text_key": "text",
    },

    #the jumping-to-id function will be disabled if "jumping_to_id_disabled" is True
    "jumping_to_id_disabled": False,

    #the navigation bar will be hidden to the annotators if "hide_navbar" is True
    "hide_navbar": True,

    "user_config": {

      "allow_all_users": True,
      
      "users": [  ],
    },

    "login": {
        "type": 'url_direct', #can be 'password' or 'url_direct'
        "url_argument": 'PROLIFIC_PID' # when the login type is set to 'url_direct', 'url_argument' must be setup for a direct url argument login
    },

    "automatic_assignment": {
        "on": True, #whether do automatic task assignment for annotators, default False.
        "output_filename": 'task_assignment.json', #no need to change
        "sampling_strategy": 'random', #currently we support random assignment or ordered assignment. Use 'random' for random assignment and 'ordered' for ordered assignment
        "labels_per_instance": 2,  #the number of labels for each instance
        "instance_per_annotator": 10, #the total amount of instances to be assigned to each annotator
        "test_question_per_annotator": 1, # the number of attention test question to be inserted into the annotation queue. you must set up the test question in surveyflow to use this function
    },

    # How many seconds do you want the annotators spend on each instance, after
    # that, an alert will be sent per alert_time_each_instance seconds.
    "alert_time_each_instance": 10000000,

    "surveyflow": {
        "on": true,
        "order": [
            "pre_annotation",
            "post_annotation"
        ],
        "pre_annotation": [
        ],
        "post_annotation": [
            "surveyflow/end.jsonl",
        ],
        "testing": [
            "surveyflow/testing.jsonl"
        ]
    },


    "annotation_schemes": [      
        {
            "annotation_type": "radio",
            "name": "affirmative_action_relevance",
            "description": "To what extent is the issue of affirmative action discussed in the following essay?",
            "labels": [
               "Affirmative action is the main subject.",
               "Affirmative action is mentioned, but is not the main subject",
               "Affirmative action is not mentioned."
            ],

            # If true, numbers [1-len(labels)] will be bound to each
            # label. Annotations with more than 10 are not supported with this
            # simple keybinding and will need to use the full item specification
            # to bind all labels to keys.
            "sequential_key_binding": True,                        
        },       
        {
            "annotation_type": "radio",
            "name": "affirmative_action_stance",
            "description": "What is the author's attitude toward affirmative action?",
            "labels": [
               "Strongly against",
               "Somewhat against", 
               "Neutral, or not enough information",
               "Somewhat in favor",
               "Strongly in favor",
            ],

            # If true, numbers [1-len(labels)] will be bound to each
            # label. Annotations with more than 10 are not supported with this
            # simple keybinding and will need to use the full item specification
            # to bind all labels to keys.
            "sequential_key_binding": True,                        
        },       
    ],

    # The html that changes the visualiztation for your task. Change this file
    # to influence the layout and description of your task. This is not a full
    # HTML page, just the piece that does lays out your task's pieces
    # you may use templates in our lib, if you want to use your own template,
    # please replace the string as a path to the template
    "html_layout": "default",

    # The core UI files for Potato. You should not need to change these normally.
    #
    # Exceptions to this might include:
    # 1) You want to add custom CSS/fonts to style your task
    # 2) Your layout requires additional JS/assets to render
    # 3) You want to support additional keybinding magic
    #
    # if you want to use your own template,
    # please replace the string as a path to the template
    "base_html_template": "default",
    "header_file": "default",

    # This is where the actual HTML files will be generated
    "site_dir": "default"

}
